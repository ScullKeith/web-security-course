spring.application.name=login-service-http-only

server.port=8200

spring.security.oauth2.client.registration.api-frontend-login.provider=keycloak
spring.security.oauth2.client.registration.api-frontend-login.client-id=api-frontend
spring.security.oauth2.client.registration.api-frontend-login.client-name=apifrontend
#spring.security.oauth2.client.registration.api-frontend-login.client-secret=commented out after switch to pkce, also no client secret anymore cause client in keycloak can be either client_secret or code_challenge/verifier pkce but not both 
spring.security.oauth2.client.registration.api-frontend-login.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-frontend-login.redirect-uri=https://localhost:8200/login/oauth2/code/api-frontend-login
spring.security.oauth2.client.registration.api-frontend-login.scope=openid

spring.security.oauth2.client.provider.keycloak.issuer-uri=https://localhost:8443/realms/ApiRealm

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://localhost:8443/realms/ApiRealm

server.tomcat.max-http-response-header-size=65536

#Properties for configuring spring app to serve cert chain as ssl server side 
server.ssl.key-store=classpath:backend_server.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=backend
